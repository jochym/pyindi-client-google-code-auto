
/*
#include <string>
#include <iostream>
#include <fstream>

#include <string.h>
#include <stdarg.h>
#include <math.h>
#include <unistd.h>
#include <time.h>
#include <memory>
#include <sys/types.h>
#include <sys/stat.h>
*/
//#include <config.h>

#include <baseclient.h>
#include <basedevice.h>
#include <indiproperty.h>

/* INDI Common Library Routines */
//#include "indicom.h"

#include "tclclient.h"

//using namespace std;

/**************************************************************************************
**
***************************************************************************************/
TclIndiClient::TclIndiClient()
{
 
}

/**************************************************************************************
**
***************************************************************************************/
TclIndiClient::~TclIndiClient()
{

}

/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::newDevice(INDI::BaseDevice *dp)
{
  // Should find a way to interface with Tcl: we are in the INDI recieving thread here
  // Maybe using Tcl Events
  // Same problem for all of the following INDI callbacks
}

/**************************************************************************************
**
*************************************************************************************/
void TclIndiClient::newProperty(INDI::Property *property)
{

}

/**************************************************************************************
**
*************************************************************************************/
void TclIndiClient::removeProperty(INDI::Property *property)
{

}


/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::newNumber(INumberVectorProperty *nvp)
{

}

/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::newMessage(INDI::BaseDevice *dp, int messageID)
{

}

/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::newBLOB(IBLOB *bp)
{

}

/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::newSwitch(ISwitchVectorProperty *svp) 
{

}

/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::newText(ITextVectorProperty *tvp) 
{

}

/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::newLight(ILightVectorProperty *lvp) 
{

}

/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::serverConnected() 
{

}

/**************************************************************************************
**
***************************************************************************************/
void TclIndiClient::serverDisconnected(int exit_code) 
{

}
